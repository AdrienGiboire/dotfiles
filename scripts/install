#!/bin/bash

set -e

RUBY_VERSION=2.5.3
CHRUBY_VERSION=0.3.9
RUBY_INSTALL_VERSION=0.7.0

function config {
  git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

# DEPENDENCIES {{{
function join { local IFS="$1"; shift; echo "$*"; }

utils=(
  autojump
  git
  imagemagick
  libevent-dev
  make
  nodejs
  postgresql
  silversearcher-ag
  wget
)

echo "==> Installing utils {$(join ' ' ${utils[@]})}"
sudo apt-get install -y $(join ' ' ${utils[@]})
# }}}

# FETCH SOURCES {{{
git clone --bare git@github.com:AdrienGiboire/dotfiles.git $HOME/.dotfiles

mkdir -p $HOME/.config-backup
config checkout
if [ 0 -le $# ]; then
  echo "Checked out config."
else
  echo "Backing up pre-existing dot files."
  config checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} mv {} $HOME/.config-backup/{}
fi
config checkout
config config status.showUntrackedFiles no
# }}}

# RUBY {{{
# install ruby-install
command -v ruby-install >/dev/null 2>&1 || {
  cd /tmp
  wget -O ruby-install-$RUBY_INSTALL_VERSION.tar.gz https://github.com/postmodern/ruby-install/archive/v$RUBY_INSTALL_VERSION.tar.gz
  tar -xzvf ruby-install-$RUBY_INSTALL_VERSION.tar.gz
  cd ruby-install-$RUBY_INSTALL_VERSION/
  sudo make install
}

if [ ! -d $HOME/.rubies ]; then
  mkdir $HOME/.rubies

  if [ ! -d $HOME/.rubies/ruby-$ruby-version ]; then
    ruby-install ruby-$RUBY_VERSION
  fi
fi

# install chruby
command -v chruby >/dev/null 2>&1 || {
  cd /tmp
  wget -O chruby-$CHRUBY_VERSION.tar.gz https://github.com/postmodern/chruby/archive/v$CHRUBY_VERSION.tar.gz
  tar -xzvf chruby-$CHRUBY_VERSION.tar.gz
  cd chruby-$CHRUBY_VERSION/
  sudo make install
}

echo "ruby-$RUBY_VERSION" > $HOME/.ruby-version
# }}}

# NODEJS {{{
curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -
sudo apt install nodejs
[ -d $HOME/.npm-global ] || mkdir $HOME/.npm-global
npm config set prefix "$HOME/.npm-global"
# }}}

# FZF {{{
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
# }}}

# VIM {{{
mkdir ~/Applications
cd ~/Applications
curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
chmod u+x nvim.appimage

git clone https://github.com/k-takata/minpac.git $HOME/.config/nvim/pack/minpac/opt/minpac
nvim --headless +PackUpdate +q
# }}}
