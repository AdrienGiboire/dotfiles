#!/bin/bash

set -o nounset # error when referencing undefined variable
set -o errexit # exit when command fails

VERBOSE=0

function join { local IFS="$1"; shift; echo "$*"; }

function die { printf '%s\n' "$1" >&2; exit 1; }

function printparse {
  if [ ${VERBOSE} -gt 0 ]; then
    printf 'Parse: %s%s%s\n' "$1" "$2" "$3" >&2;
  fi
}

function showme {
  if [ ${VERBOSE} -gt 0 ]; then
    printf 'VERBOSE: %s\n' "$1" >&2;
  fi
}

function config {
  git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

options=$(getopt -o v -l ruby,node -- "$@")
[ $? -eq 0 ] || die "Incorrect options provided"
eval set -- "$options"

with_ruby=false
with_node=false

while true; do
  case "$1" in
    -v|--verbose)
      VERBOSE=1
      ;;
    --ruby)
      with_ruby=true
      ;;
    --node)
      with_node=true
      ;;
    *)
      break
      ;;
  esac
  shift
done

# DEPENDENCIES {{{1
utils=(
  apt-transport-https
  ca-certificates
  curl
  git
  gnupg-agent
  make
  silversearcher-ag
  software-properties-common
)

echo "==> Installing utils {$(join ' ' ${utils[@]})}"
sudo apt-get install -y $(join ' ' ${utils[@]})
# }}}

# FETCH SOURCES {{{1
git clone --bare git@github.com:AdrienGiboire/dotfiles.git $HOME/.dotfiles

mkdir -p $HOME/.config-backup
config checkout
if [ 0 -le $# ]; then
  echo "Checked out config."
else
  echo "Backing up pre-existing dot files."
  config checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} mv {} $HOME/.config-backup/{}
fi
config checkout
config config status.showUntrackedFiles no
# }}}

$with_ruby && . ./install-ruby
$with_node && . ./install-node

# FZF {{{1
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
# }}}

# VIM {{{1
mkdir ~/Applications
cd ~/Applications
curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
chmod u+x nvim.appimage

git clone https://github.com/k-takata/minpac.git $HOME/.config/nvim/pack/minpac/opt/minpac
nvim --headless +PackUpdate +q
#}}}
