#!/usr/bin/env bash

db_owner=''
db_source_name=''
db_target_name=''

function mysql_execute() {
  debug "Executing SQL Statement: $1"
  sudo mysql -e "$1"
}

function mysql_kill_processes() {
  echo "Killing processes linked to '$db_target_name'..."

  process_list_file="${mysql_data_path}process_list.txt"

  sudo [ -f $process_list_file ] && sudo rm $process_list_file
  mysql_execute "SELECT CONCAT('KILL ',id,';') FROM information_schema.processlist WHERE db='$db_target_name' INTO OUTFILE '$process_list_file';"
  mysql_execute "SOURCE $process_list_file;"
}

mysql_clone_database () {
  db_owner=$1
  db_source_name=$2
  db_target_name=$3

  mysql_data_path=`mysql_execute "SHOW VARIABLES LIKE 'secure_file_priv';" | tail -1 | cut -f 2`

  if mysql_execute "SHOW DATABASES;" | grep $db_target_name; then
    while true ; do
      read -p "Database '$db_target_name' already exists, do you want to reset it to '$db_source_name'? (y/N) " answer </dev/tty
      [ -z $answer ] && answer='n'

      case ${answer:0:1} in
        y|Y )
          mysql_kill_processes

          echo "Dropping database..."
          mysql_execute "DROP DATABASE $db_target_name;"
          break
          ;;
        n|N )
          clone_db=false
          break
          ;;
        * )
          echo 'Please answer yes (y) or no (n).';;
      esac
    done
  fi

  if $clone_db; then
    mysql_kill_processes

    echo "Creating database..."
    sudo mysqldump $db_source_name -r /tmp/dump.sql
    mysql_execute "CREATE DATABASE $db_target_name;"
    mysql_execute "USE $db_target_name; SOURCE /tmp/dump.sql;"
    mysql_execute "GRANT ALL ON $db_target_name.* TO '$db_owner'@'localhost'; FLUSH PRIVILEGES;"
  fi
}


